from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from datetime import datetime
from colorama import Fore,Style


def generate_pdf_report(broker_ip, username, password, topics, fuzz_count, flood_info, qos_delay_summary):
    filename = f"report_{broker_ip.replace('.', '_')}.pdf"
    c = canvas.Canvas(filename, pagesize=A4)
    width, height = A4

    # ==== HEADER ====
    c.setFont("Helvetica-Bold", 18)
    c.drawString(50, height - 50, "Laporan Pengujian Keamanan MQTT")
    c.setFont("Helvetica", 12)
    c.drawString(50, height - 70, "Penetration Testing Report - IoT MQTT Broker")
    c.line(50, height - 75, width - 50, height - 75)

    # ==== INFO TARGET ====
    y = height - 100
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, y, "Informasi Target")
    c.setFont("Helvetica", 11)
    y -= 20
    c.drawString(60, y, f"Tanggal: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    y -= 15
    c.drawString(60, y, f"Broker IP: {broker_ip}")
    y -= 15
    c.drawString(60, y, f"Username: {username or 'N/A'}")
    y -= 15
    c.drawString(60, y, f"Password: {password or 'N/A'}")

    # ==== HASIL SNIFF TOPIK ====
    y -= 30
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, y, "Topik MQTT yang Disadap")
    y -= 20
    c.setFont("Helvetica", 11)
    if topics:
        for idx, topic in enumerate(list(topics)[:15], start=1):
            c.drawString(60, y, f"{idx}. {topic}")
            y -= 15
            if y < 100:
                c.showPage()
                y = height - 50
    else:
        c.drawString(60, y, "Tidak ada topik yang berhasil di-sniff.")

    # ==== HASIL FUZZING ====
    y -= 30
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, y, "Hasil Fuzzing")
    y -= 20
    c.setFont("Helvetica", 11)
    c.drawString(60, y, f"Jumlah Payload Dikirim: {fuzz_count}")

    # ==== INFO SUBSCRIBE FLOOD ====
    y -= 30
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, y, "Informasi Subscribe Flood")
    y -= 20
    c.setFont("Helvetica", 11)
    c.drawString(60, y, f"Jumlah Topik: {flood_info['topic_count']}")
    y -= 15
    c.drawString(60, y, f"Pesan per Topik: {flood_info['messages_per_topic']}")

    # ==== RINGKASAN QoS ====
    y -= 30
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, y, "Ringkasan Delay Maksimum per QoS")
    y -= 20
    c.setFont("Helvetica", 11)
    for qos_level in [0, 1, 2]:
        delay = qos_delay_summary.get(qos_level, -1)
        text = f"QoS {qos_level}: {'Gagal' if delay == -1 else f'{delay:.3f} detik'}"
        c.drawString(60, y, text)
        y -= 15
        if y < 100:
            c.showPage()
            y = height - 50


    # ==== FOOTER ====
    c.setFont("Helvetica-Oblique", 9)
    c.drawString(50, 30, "Generated by MQTT Penetration Testing Tool © 2025")
    c.drawRightString(width - 50, 30, f"{datetime.now().strftime('%d/%m/%Y %H:%M')}")

    c.showPage()
    c.save()
    print(f"{Fore.GREEN}[✓] Laporan PDF disimpan sebagai {filename}{Style.RESET_ALL}")
